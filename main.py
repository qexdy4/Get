import asyncio
import random
from aiohttp import web
from telethon.sync import TelegramClient
from telethon.tl.functions.messages import SendMessageRequest
from telethon.errors import FloodWaitError, RPCError

# --- Telegram API ---
API_ID = 29739265  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API_ID
API_HASH = "9475db10c792d716e97a51f608871263"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API_HASH
SESSION_NAME = "joiner_session"

async def send_messages():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram."""
    async with TelegramClient(SESSION_NAME, API_ID, API_HASH) as client:
        await client.connect()
        with open("chats.txt", "r", encoding="utf-8") as file:
            chats = [line.strip() for line in file if line.strip()]
        
        for chat in chats:
            try:
                message = await client(SendMessageRequest(chat, "–¢–æ–ª—å–∫–æ —É –Ω–∞—Å —Ç—ã –Ω–∞–π–¥–µ—à—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Ç–æ–≤–∞—Ä –∏ —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Å—Ç–∞—Ñ—Ñ –ø–æ –æ—á–µ–Ω—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω–µ.üòúü§ü! –®–æ–ø –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è!"))
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat}")
                delay = random.uniform(1200, 1800)  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç 20 –¥–æ 30 –º–∏–Ω—É—Ç
                print(f"–û–∂–∏–¥–∞–Ω–∏–µ {delay / 60:.2f} –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º...")
                await asyncio.sleep(delay)
            except FloodWaitError as e:
                print(f"FloodWait: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å {e.seconds} —Å–µ–∫—É–Ω–¥.")
                await asyncio.sleep(e.seconds)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ {chat}: {e}")

async def handle(request):
    """–û—Ç–≤–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã."""
    return web.Response(text="–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!")

async def web_server():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞."""
    app = web.Application()
    app.router.add_get("/", handle)
    return app

async def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: Telegram –∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä."""
    asyncio.create_task(send_messages())  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    app = await web_server()
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", 8080)
    await site.start()

    print("–í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080...")
    while True:
        await asyncio.sleep(3600)  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞

# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
asyncio.run(main())
